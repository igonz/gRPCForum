syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.sample.forum.gRPC";
option java_outer_classname = "IndexProto";
option objc_class_prefix = "GRPCF";

package grpcforum;

service Question {
    rpc getQuestions (QuestionsRequest) returns (QuestionsResponse) {}
    rpc postQuestion (NewQuestionRequest) returns (QuestionsResponse) {}
    rpc postAnswer (NewAnswerRequest) returns (AnswerResponse) {}
    rpc watchQuestionForNewAnswer (WatchQuestionRequest) returns (stream AnswerResponse) {}
    rpc unwatchQuestionForNewAnswer (UnWatchQuestionRequest) returns (UnWatchQuestionResponse) {}
    rpc watchForNewQuestion (WatchNewQuestionRequest) returns (stream QuestionsResponse) {}
    rpc unwatchForNewQuestion (UnWatchNewQuestionRequest) returns (UnWatchNewQuestionResponse) {}
    rpc registerUserAudit (stream RegisterUserAuditRequest) returns (RegisterUserAuditResponse) {}
    rpc chat (stream ChatRequest) returns (stream ChatResponse) {}
}

enum UserAction {
    VIEWING_QUESTION = 0;
    TYPING = 1;
}

message ChatRequest {
    string chatMessage=1;
    int64 userId=2;
    int64 chatId=3;
}

message ChatResponse {
    string chatMessage=1;
    int64 userId=2;
    int64 chatId=3;
}

message RegisterUserAuditRequest {
    int64 userId=1;
    int64 questionId = 2;
    UserAction userAction=3;
}

message RegisterUserAuditResponse {
}

message WatchNewQuestionRequest {
    int64 userId=1;
}

message UnWatchNewQuestionRequest {
    int64 userId=1;
}

message UnWatchNewQuestionResponse {

}

message UnWatchQuestionRequest {
    int64 questionId=1;
    int64 userId=2;
}

message UnWatchQuestionResponse {

}

message WatchQuestionRequest {
    int64 questionId=1;
    int64 userId=2;
}

message QuestionsRequest {
}

message QuestionsResponse {
    repeated QuestionMessage question = 1;
}

message NewQuestionRequest {
    NewQuestionMessage newQuestion = 1;
}

message NewQuestionMessage {
    int64 userID = 1;
    string questionContent = 2;
}

message QuestionMessage {
    int64 id = 1;
    string questionContent = 2;
    UserMessage userMessage = 3;
    repeated AnswerMessage answer = 4;
}

message AnswerRequest {
}

message AnswerResponse {
    AnswerMessage answer = 1;
}

message AnswerMessage {
    int64 id = 1;
    string answerContent = 2;
    UserMessage userMessage = 3;
}

message NewAnswerRequest {
    int64 questionID = 1;
    int64 userID = 2;
    AnswerMessage answer = 3;
}

message UserMessage {
    int64 id = 1;
    string username = 2;
}